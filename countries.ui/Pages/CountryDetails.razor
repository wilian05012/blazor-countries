@page "/countries/{code:alpha}"


<MudButton StartIcon="@Icons.Material.Outlined.ArrowBack" OnClick="@(() => { NavigateBackHome(); })">Back</MudButton>

<MudText Typo="Typo.h3">@(_country?.Name?.Common ?? "Unknown country")</MudText>


<MudText>
    <span class="fw-800">Native Name:</span>
    <span>@string.Join(" | ", _country?.Name?.GetNativeNames() ?? Array.Empty<string>())</span>
</MudText>

<MudText>
    <span class="fw-800">Population:</span>
    <span>@_country?.Population.ToString("N0")</span>
</MudText>

<MudText>
    <span class="fw-800">Region:</span>
    <span>@_country?.Region</span>
</MudText>

<MudText>
    <span class="fw-800">Sub Region:</span>
    <span>@_country?.SubRegion</span>
</MudText>

<MudText>
    <span class="fw-800">Capital:</span>
    <span>@string.Join(" | ", _country?.Capital ?? Array.Empty<string>())</span>
</MudText>

<MudText>
    <span class="fw-800">Top Level Domain:</span>
    <span>@(string.Join(" | ", _country?.TopLevelDomain ?? Array.Empty<string>()))</span>
</MudText>

<MudText>
    <span class="fw-800">Currencies:</span>
    <span>@string.Join(", ", _country?.Currencies.Select(c => $"{c.Value.Name} ({c.Value.Symbol})") ?? Array.Empty<string>())</span>
</MudText>

<MudText>
    <span class="fw-800">Languages:</span>
    <span>@string.Join(", ", _country?.Languages.Select(l => l.Value) ?? Array.Empty<string>())</span>
</MudText>

<MudPaper>
    <MudText Typo="Typo.h6">Borders:</MudText>
    @if (_neighboringCountries.Count > 0)
    {
        <MudButtonGroup>
            @{
                foreach(var neighborCountry in _neighboringCountries) {
                    <MudButton OnClick="@(() => { NavigateToCountry(neighborCountry.Code); })" >@neighborCountry.Name.Common</MudButton>
                }
            }
        </MudButtonGroup>
    }
    else
    {
        <MudText>No borders</MudText>
    }   
</MudPaper>